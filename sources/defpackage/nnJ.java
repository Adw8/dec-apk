package defpackage;

import java.util.HashMap;
import java.util.HashSet;

/* renamed from: nnJ  reason: default package */
/* loaded from: classes.dex */
public final class nnJ {
    public static HashMap R = new HashMap();

    /* renamed from: R  reason: collision with other field name */
    public static HashSet f6586R = new HashSet();
    public static HashMap v = new HashMap();

    /* renamed from: v  reason: collision with other field name */
    public static HashSet f6587v = new HashSet();
    public static HashMap c = new HashMap();

    static {
        u uVar = lpk.R;
        u uVar2 = mJI.O;
        u uVar3 = mJI.R;
        u uVar4 = lpk.L;
        u uVar5 = aP4.R;
        u uVar6 = hy2.R;
        R.put("COMPOSITE", bzN.v);
        HashMap hashMap = R;
        u uVar7 = lpk.v;
        hashMap.put("MD2WITHRSAENCRYPTION", uVar7);
        R.put("MD2WITHRSA", uVar7);
        HashMap hashMap2 = R;
        u uVar8 = lpk.e;
        hashMap2.put("MD5WITHRSAENCRYPTION", uVar8);
        R.put("MD5WITHRSA", uVar8);
        HashMap hashMap3 = R;
        u uVar9 = lpk.X;
        hashMap3.put("SHA1WITHRSAENCRYPTION", uVar9);
        R.put("SHA1WITHRSA", uVar9);
        HashMap hashMap4 = R;
        u uVar10 = lpk.H;
        hashMap4.put("SHA224WITHRSAENCRYPTION", uVar10);
        R.put("SHA224WITHRSA", uVar10);
        HashMap hashMap5 = R;
        u uVar11 = lpk.Z;
        hashMap5.put("SHA256WITHRSAENCRYPTION", uVar11);
        R.put("SHA256WITHRSA", uVar11);
        HashMap hashMap6 = R;
        u uVar12 = lpk.m;
        hashMap6.put("SHA384WITHRSAENCRYPTION", uVar12);
        R.put("SHA384WITHRSA", uVar12);
        HashMap hashMap7 = R;
        u uVar13 = lpk.x;
        hashMap7.put("SHA512WITHRSAENCRYPTION", uVar13);
        R.put("SHA512WITHRSA", uVar13);
        HashMap hashMap8 = R;
        u uVar14 = lpk.U;
        hashMap8.put("SHA512(224)WITHRSAENCRYPTION", uVar14);
        R.put("SHA512(224)WITHRSA", uVar14);
        HashMap hashMap9 = R;
        u uVar15 = lpk.C;
        hashMap9.put("SHA512(256)WITHRSAENCRYPTION", uVar15);
        R.put("SHA512(256)WITHRSA", uVar15);
        R.put("SHA1WITHRSAANDMGF1", uVar4);
        R.put("SHA224WITHRSAANDMGF1", uVar4);
        R.put("SHA256WITHRSAANDMGF1", uVar4);
        R.put("SHA384WITHRSAANDMGF1", uVar4);
        R.put("SHA512WITHRSAANDMGF1", uVar4);
        R.put("SHA3-224WITHRSAANDMGF1", uVar4);
        R.put("SHA3-256WITHRSAANDMGF1", uVar4);
        R.put("SHA3-384WITHRSAANDMGF1", uVar4);
        R.put("SHA3-512WITHRSAANDMGF1", uVar4);
        HashMap hashMap10 = R;
        u uVar16 = lFw.e;
        hashMap10.put("RIPEMD160WITHRSAENCRYPTION", uVar16);
        R.put("RIPEMD160WITHRSA", uVar16);
        HashMap hashMap11 = R;
        u uVar17 = lFw.X;
        hashMap11.put("RIPEMD128WITHRSAENCRYPTION", uVar17);
        R.put("RIPEMD128WITHRSA", uVar17);
        HashMap hashMap12 = R;
        u uVar18 = lFw.O;
        hashMap12.put("RIPEMD256WITHRSAENCRYPTION", uVar18);
        R.put("RIPEMD256WITHRSA", uVar18);
        R.put("SHA1WITHDSA", uVar2);
        R.put("DSAWITHSHA1", uVar2);
        HashMap hashMap13 = R;
        u uVar19 = fkm.o;
        hashMap13.put("SHA224WITHDSA", uVar19);
        HashMap hashMap14 = R;
        u uVar20 = fkm.K;
        hashMap14.put("SHA256WITHDSA", uVar20);
        HashMap hashMap15 = R;
        u uVar21 = fkm.J;
        hashMap15.put("SHA384WITHDSA", uVar21);
        HashMap hashMap16 = R;
        u uVar22 = fkm.Y;
        hashMap16.put("SHA512WITHDSA", uVar22);
        HashMap hashMap17 = R;
        u uVar23 = fkm.h;
        hashMap17.put("SHA3-224WITHDSA", uVar23);
        HashMap hashMap18 = R;
        u uVar24 = fkm.I;
        hashMap18.put("SHA3-256WITHDSA", uVar24);
        HashMap hashMap19 = R;
        u uVar25 = fkm.u;
        hashMap19.put("SHA3-384WITHDSA", uVar25);
        HashMap hashMap20 = R;
        u uVar26 = fkm.z;
        hashMap20.put("SHA3-512WITHDSA", uVar26);
        HashMap hashMap21 = R;
        u uVar27 = fkm.n;
        hashMap21.put("SHA3-224WITHECDSA", uVar27);
        HashMap hashMap22 = R;
        u uVar28 = fkm.Q;
        hashMap22.put("SHA3-256WITHECDSA", uVar28);
        HashMap hashMap23 = R;
        u uVar29 = fkm.A;
        hashMap23.put("SHA3-384WITHECDSA", uVar29);
        HashMap hashMap24 = R;
        u uVar30 = fkm.S;
        hashMap24.put("SHA3-512WITHECDSA", uVar30);
        HashMap hashMap25 = R;
        u uVar31 = fkm.d;
        hashMap25.put("SHA3-224WITHRSA", uVar31);
        HashMap hashMap26 = R;
        u uVar32 = fkm.W;
        hashMap26.put("SHA3-256WITHRSA", uVar32);
        HashMap hashMap27 = R;
        u uVar33 = fkm.s;
        hashMap27.put("SHA3-384WITHRSA", uVar33);
        HashMap hashMap28 = R;
        u uVar34 = fkm.T;
        hashMap28.put("SHA3-512WITHRSA", uVar34);
        R.put("SHA3-224WITHRSAENCRYPTION", uVar31);
        R.put("SHA3-256WITHRSAENCRYPTION", uVar32);
        R.put("SHA3-384WITHRSAENCRYPTION", uVar33);
        R.put("SHA3-512WITHRSAENCRYPTION", uVar34);
        R.put("SHA1WITHECDSA", uVar3);
        R.put("ECDSAWITHSHA1", uVar3);
        HashMap hashMap29 = R;
        u uVar35 = mJI.v;
        hashMap29.put("SHA224WITHECDSA", uVar35);
        HashMap hashMap30 = R;
        u uVar36 = mJI.c;
        hashMap30.put("SHA256WITHECDSA", uVar36);
        HashMap hashMap31 = R;
        u uVar37 = mJI.e;
        hashMap31.put("SHA384WITHECDSA", uVar37);
        HashMap hashMap32 = R;
        u uVar38 = mJI.X;
        hashMap32.put("SHA512WITHECDSA", uVar38);
        HashMap hashMap33 = R;
        u uVar39 = aP4.c;
        hashMap33.put("GOST3411WITHGOST3410", uVar39);
        R.put("GOST3411WITHGOST3410-94", uVar39);
        HashMap hashMap34 = R;
        u uVar40 = aP4.e;
        hashMap34.put("GOST3411WITHECGOST3410", uVar40);
        R.put("GOST3411WITHECGOST3410-2001", uVar40);
        R.put("GOST3411WITHGOST3410-2001", uVar40);
        HashMap hashMap35 = R;
        u uVar41 = hy2.c;
        hashMap35.put("GOST3411WITHECGOST3410-2012-256", uVar41);
        HashMap hashMap36 = R;
        u uVar42 = hy2.e;
        hashMap36.put("GOST3411WITHECGOST3410-2012-512", uVar42);
        R.put("GOST3411WITHGOST3410-2012-256", uVar41);
        R.put("GOST3411WITHGOST3410-2012-512", uVar42);
        R.put("GOST3411-2012-256WITHECGOST3410-2012-256", uVar41);
        R.put("GOST3411-2012-512WITHECGOST3410-2012-512", uVar42);
        R.put("GOST3411-2012-256WITHGOST3410-2012-256", uVar41);
        R.put("GOST3411-2012-512WITHGOST3410-2012-512", uVar42);
        R.put("SHA1WITHCVC-ECDSA", cFg.R);
        R.put("SHA224WITHCVC-ECDSA", cFg.v);
        R.put("SHA256WITHCVC-ECDSA", cFg.c);
        R.put("SHA384WITHCVC-ECDSA", cFg.e);
        R.put("SHA512WITHCVC-ECDSA", cFg.X);
        HashMap hashMap37 = R;
        u uVar43 = T5.v;
        hashMap37.put("SHA3-512WITHSPHINCS256", uVar43);
        HashMap hashMap38 = R;
        u uVar44 = T5.R;
        hashMap38.put("SHA512WITHSPHINCS256", uVar44);
        R.put("SHA1WITHPLAIN-ECDSA", _p.R);
        R.put("RIPEMD160WITHPLAIN-ECDSA", _p.O);
        HashMap hashMap39 = R;
        u uVar45 = _p.v;
        hashMap39.put("SHA224WITHPLAIN-ECDSA", uVar45);
        HashMap hashMap40 = R;
        u uVar46 = _p.c;
        hashMap40.put("SHA256WITHPLAIN-ECDSA", uVar46);
        HashMap hashMap41 = R;
        u uVar47 = _p.e;
        hashMap41.put("SHA384WITHPLAIN-ECDSA", uVar47);
        HashMap hashMap42 = R;
        u uVar48 = _p.X;
        hashMap42.put("SHA512WITHPLAIN-ECDSA", uVar48);
        HashMap hashMap43 = R;
        u uVar49 = _p.L;
        hashMap43.put("SHA3-224WITHPLAIN-ECDSA", uVar49);
        HashMap hashMap44 = R;
        u uVar50 = _p.Z;
        hashMap44.put("SHA3-256WITHPLAIN-ECDSA", uVar50);
        HashMap hashMap45 = R;
        u uVar51 = _p.m;
        hashMap45.put("SHA3-384WITHPLAIN-ECDSA", uVar51);
        HashMap hashMap46 = R;
        u uVar52 = _p.x;
        hashMap46.put("SHA3-512WITHPLAIN-ECDSA", uVar52);
        HashMap hashMap47 = R;
        u uVar53 = kk3.R;
        hashMap47.put("ED25519", uVar53);
        HashMap hashMap48 = R;
        u uVar54 = kk3.v;
        hashMap48.put("ED448", uVar54);
        HashMap hashMap49 = R;
        u uVar55 = IX.R;
        hashMap49.put("SHAKE128WITHRSAPSS", uVar55);
        HashMap hashMap50 = R;
        u uVar56 = IX.v;
        hashMap50.put("SHAKE256WITHRSAPSS", uVar56);
        R.put("SHAKE128WITHRSASSA-PSS", uVar55);
        R.put("SHAKE256WITHRSASSA-PSS", uVar56);
        HashMap hashMap51 = R;
        u uVar57 = IX.c;
        hashMap51.put("SHAKE128WITHECDSA", uVar57);
        HashMap hashMap52 = R;
        u uVar58 = IX.e;
        hashMap52.put("SHAKE256WITHECDSA", uVar58);
        HashMap hashMap53 = R;
        u uVar59 = h2Q.c;
        hashMap53.put("SHA256WITHSM2", uVar59);
        HashMap hashMap54 = R;
        u uVar60 = h2Q.v;
        hashMap54.put("SM3WITHSM2", uVar60);
        HashMap hashMap55 = R;
        u uVar61 = T5.c;
        hashMap55.put("SHA256WITHXMSS", uVar61);
        HashMap hashMap56 = R;
        u uVar62 = T5.e;
        hashMap56.put("SHA512WITHXMSS", uVar62);
        HashMap hashMap57 = R;
        u uVar63 = T5.X;
        hashMap57.put("SHAKE128WITHXMSS", uVar63);
        HashMap hashMap58 = R;
        u uVar64 = T5.O;
        hashMap58.put("SHAKE256WITHXMSS", uVar64);
        HashMap hashMap59 = R;
        u uVar65 = T5.H;
        hashMap59.put("SHA256WITHXMSSMT", uVar65);
        HashMap hashMap60 = R;
        u uVar66 = T5.U;
        hashMap60.put("SHA512WITHXMSSMT", uVar66);
        HashMap hashMap61 = R;
        u uVar67 = T5.C;
        hashMap61.put("SHAKE128WITHXMSSMT", uVar67);
        HashMap hashMap62 = R;
        u uVar68 = T5.N;
        hashMap62.put("SHAKE256WITHXMSSMT", uVar68);
        R.put("SHA256WITHXMSS-SHA256", uVar61);
        R.put("SHA512WITHXMSS-SHA512", uVar62);
        R.put("SHAKE128WITHXMSS-SHAKE128", uVar63);
        R.put("SHAKE256WITHXMSS-SHAKE256", uVar64);
        R.put("SHA256WITHXMSSMT-SHA256", uVar65);
        R.put("SHA512WITHXMSSMT-SHA512", uVar66);
        R.put("SHAKE128WITHXMSSMT-SHAKE128", uVar67);
        R.put("SHAKE256WITHXMSSMT-SHAKE256", uVar68);
        R.put("LMS", lpk.o);
        HashMap hashMap63 = R;
        u uVar69 = lgz.R;
        hashMap63.put("XMSS", uVar69);
        HashMap hashMap64 = R;
        u uVar70 = T5.L;
        hashMap64.put("XMSS-SHA256", uVar70);
        HashMap hashMap65 = R;
        u uVar71 = T5.Z;
        hashMap65.put("XMSS-SHA512", uVar71);
        HashMap hashMap66 = R;
        u uVar72 = T5.m;
        hashMap66.put("XMSS-SHAKE128", uVar72);
        HashMap hashMap67 = R;
        u uVar73 = T5.x;
        hashMap67.put("XMSS-SHAKE256", uVar73);
        HashMap hashMap68 = R;
        u uVar74 = lgz.v;
        hashMap68.put("XMSSMT", uVar74);
        HashMap hashMap69 = R;
        u uVar75 = T5.P;
        hashMap69.put("XMSSMT-SHA256", uVar75);
        HashMap hashMap70 = R;
        u uVar76 = T5.j;
        hashMap70.put("XMSSMT-SHA512", uVar76);
        HashMap hashMap71 = R;
        u uVar77 = T5.g;
        hashMap71.put("XMSSMT-SHAKE128", uVar77);
        HashMap hashMap72 = R;
        u uVar78 = T5.y;
        hashMap72.put("XMSSMT-SHAKE256", uVar78);
        HashMap hashMap73 = R;
        u uVar79 = T5.V;
        hashMap73.put("SPHINCS+", uVar79);
        R.put("SPHINCSPLUS", uVar79);
        HashMap hashMap74 = R;
        u uVar80 = T5.S;
        hashMap74.put("DILITHIUM2", uVar80);
        HashMap hashMap75 = R;
        u uVar81 = T5.d;
        hashMap75.put("DILITHIUM3", uVar81);
        HashMap hashMap76 = R;
        u uVar82 = T5.W;
        hashMap76.put("DILITHIUM5", uVar82);
        HashMap hashMap77 = R;
        u uVar83 = T5.s;
        hashMap77.put("DILITHIUM2-AES", uVar83);
        HashMap hashMap78 = R;
        u uVar84 = T5.T;
        hashMap78.put("DILITHIUM3-AES", uVar84);
        HashMap hashMap79 = R;
        u uVar85 = T5.r;
        hashMap79.put("DILITHIUM5-AES", uVar85);
        HashMap hashMap80 = R;
        u uVar86 = T5.n;
        hashMap80.put("FALCON-512", uVar86);
        HashMap hashMap81 = R;
        u uVar87 = T5.Q;
        hashMap81.put("FALCON-1024", uVar87);
        HashMap hashMap82 = R;
        u uVar88 = T5.Y;
        hashMap82.put("PICNIC", uVar88);
        HashMap hashMap83 = R;
        u uVar89 = T5.h;
        hashMap83.put("SHA512WITHPICNIC", uVar89);
        HashMap hashMap84 = R;
        u uVar90 = T5.u;
        hashMap84.put("SHA3-512WITHPICNIC", uVar90);
        HashMap hashMap85 = R;
        u uVar91 = T5.I;
        hashMap85.put("SHAKE256WITHPICNIC", uVar91);
        f6586R.add(uVar3);
        f6586R.add(uVar35);
        f6586R.add(uVar36);
        f6586R.add(uVar37);
        f6586R.add(uVar38);
        f6586R.add(uVar2);
        f6586R.add(fQj.v);
        f6586R.add(uVar19);
        f6586R.add(uVar20);
        f6586R.add(uVar21);
        f6586R.add(uVar22);
        f6586R.add(uVar23);
        f6586R.add(uVar24);
        f6586R.add(uVar25);
        f6586R.add(uVar26);
        f6586R.add(uVar27);
        f6586R.add(uVar28);
        f6586R.add(uVar29);
        f6586R.add(uVar30);
        f6586R.add(uVar45);
        f6586R.add(uVar46);
        f6586R.add(uVar47);
        f6586R.add(uVar48);
        f6586R.add(uVar49);
        f6586R.add(uVar50);
        f6586R.add(uVar51);
        f6586R.add(uVar52);
        f6586R.add(uVar39);
        f6586R.add(uVar40);
        f6586R.add(uVar41);
        f6586R.add(uVar42);
        f6586R.add(uVar44);
        f6586R.add(uVar43);
        f6586R.add(uVar79);
        HashSet hashSet = f6586R;
        u uVar92 = T5.o;
        hashSet.add(uVar92);
        HashSet hashSet2 = f6586R;
        u uVar93 = T5.K;
        hashSet2.add(uVar93);
        HashSet hashSet3 = f6586R;
        u uVar94 = T5.J;
        hashSet3.add(uVar94);
        f6586R.add(T5.A);
        f6586R.add(uVar80);
        f6586R.add(uVar81);
        f6586R.add(uVar82);
        f6586R.add(uVar83);
        f6586R.add(uVar84);
        f6586R.add(uVar85);
        f6586R.add(T5.z);
        f6586R.add(uVar86);
        f6586R.add(uVar87);
        f6586R.add(uVar88);
        f6586R.add(uVar89);
        f6586R.add(uVar90);
        f6586R.add(uVar91);
        f6586R.add(uVar61);
        f6586R.add(uVar62);
        f6586R.add(uVar63);
        f6586R.add(uVar64);
        f6586R.add(uVar65);
        f6586R.add(uVar66);
        f6586R.add(uVar67);
        f6586R.add(uVar68);
        f6586R.add(uVar70);
        f6586R.add(uVar71);
        f6586R.add(uVar72);
        f6586R.add(uVar73);
        f6586R.add(uVar75);
        f6586R.add(uVar76);
        f6586R.add(uVar77);
        f6586R.add(uVar78);
        f6586R.add(uVar69);
        f6586R.add(uVar74);
        f6586R.add(T5.t);
        f6586R.add(T5.i);
        f6586R.add(uVar59);
        f6586R.add(uVar60);
        f6586R.add(uVar53);
        f6586R.add(uVar54);
        f6586R.add(uVar55);
        f6586R.add(uVar56);
        f6586R.add(uVar57);
        f6586R.add(uVar58);
        f6587v.add(uVar9);
        f6587v.add(uVar10);
        f6587v.add(uVar11);
        f6587v.add(uVar12);
        f6587v.add(uVar13);
        f6587v.add(uVar17);
        f6587v.add(uVar16);
        f6587v.add(uVar18);
        f6587v.add(uVar31);
        f6587v.add(uVar32);
        f6587v.add(uVar33);
        f6587v.add(uVar34);
        u uVar95 = fQj.R;
        eVe eve = eVe.R;
        v.put("SHA1WITHRSAANDMGF1", R(new wa(uVar95, eve), 20));
        u uVar96 = fkm.e;
        v.put("SHA224WITHRSAANDMGF1", R(new wa(uVar96, eve), 28));
        u uVar97 = fkm.R;
        v.put("SHA256WITHRSAANDMGF1", R(new wa(uVar97, eve), 32));
        u uVar98 = fkm.v;
        v.put("SHA384WITHRSAANDMGF1", R(new wa(uVar98, eve), 48));
        u uVar99 = fkm.c;
        v.put("SHA512WITHRSAANDMGF1", R(new wa(uVar99, eve), 64));
        u uVar100 = fkm.L;
        v.put("SHA3-224WITHRSAANDMGF1", R(new wa(uVar100, eve), 28));
        u uVar101 = fkm.Z;
        v.put("SHA3-256WITHRSAANDMGF1", R(new wa(uVar101, eve), 32));
        u uVar102 = fkm.m;
        v.put("SHA3-384WITHRSAANDMGF1", R(new wa(uVar102, eve), 48));
        u uVar103 = fkm.x;
        v.put("SHA3-512WITHRSAANDMGF1", R(new wa(uVar103, eve), 64));
        c.put(uVar10, uVar96);
        c.put(uVar11, uVar97);
        c.put(uVar12, uVar98);
        c.put(uVar13, uVar99);
        c.put(uVar19, uVar96);
        c.put(uVar20, uVar97);
        c.put(uVar21, uVar98);
        c.put(uVar22, uVar99);
        c.put(uVar23, uVar100);
        c.put(uVar24, uVar101);
        c.put(uVar25, uVar102);
        c.put(uVar26, uVar103);
        c.put(uVar27, uVar100);
        c.put(uVar28, uVar101);
        c.put(uVar29, uVar102);
        c.put(uVar30, uVar103);
        c.put(uVar31, uVar100);
        c.put(uVar32, uVar101);
        c.put(uVar33, uVar102);
        c.put(uVar34, uVar103);
        c.put(uVar7, lpk.j);
        c.put(lpk.c, lpk.g);
        c.put(uVar8, lpk.y);
        c.put(uVar9, uVar95);
        c.put(uVar17, lFw.v);
        c.put(uVar16, lFw.R);
        c.put(uVar18, lFw.c);
        HashMap hashMap86 = c;
        u uVar104 = aP4.R;
        hashMap86.put(uVar39, uVar104);
        c.put(uVar40, uVar104);
        c.put(uVar41, hy2.R);
        c.put(uVar42, hy2.v);
        HashMap hashMap87 = c;
        u uVar105 = fkm.U;
        hashMap87.put(uVar92, uVar105);
        c.put(uVar93, uVar97);
        c.put(uVar94, uVar99);
        c.put(uVar59, uVar97);
        c.put(uVar60, h2Q.R);
        HashMap hashMap88 = c;
        u uVar106 = fkm.H;
        hashMap88.put(uVar55, uVar106);
        c.put(uVar56, uVar105);
        c.put(uVar57, uVar106);
        c.put(uVar58, uVar105);
    }

    public static lOC R(wa waVar, int i) {
        return new lOC(waVar, new wa(lpk.O, waVar), new X((long) i), new X(1));
    }

    public static wa v(String str) {
        String X = aPR.X(str);
        u uVar = (u) R.get(X);
        if (uVar != null) {
            return f6586R.contains(uVar) ? new wa(uVar) : v.containsKey(X) ? new wa(uVar, (b) v.get(X)) : new wa(uVar, eVe.R);
        }
        throw new IllegalArgumentException(opT.H("Unknown signature type requested: ", X));
    }
}
